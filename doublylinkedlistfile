#include<iostream>
using namespace std;
class node{
public:
int data;
node* next;
node* prev;
   node(int val)
   {
    data=val;
    next=NULL;
    prev=NULL;
   }
};
class doublylinkedlist{
 public:
 node* head;
 node* tail;
 doublylinkedlist()
 {
    head=NULL;
    tail=NULL;
 }
 void insertatstart(int data)
 {
    node* new_node=new node(data);
    if(head==NULL)
    {
        head=new_node;
        tail=new_node;
        return;
    }
    new_node->next=head;
    head->prev=new_node;
    head=new_node;
 }
 void insertatend(int data)
 {
    node* new_node=new node(data);
    if(tail==NULL)
    {
        head=new_node;
        tail=new_node;
        return ;
    }
    tail->next=new_node;
    new_node->prev=tail;
    tail=new_node;

 }
 void insertatposition(int data,int k)
 {
     node* new_node=new node(data);
     node* temp=head;
     int count=1;
     while(count<(k-1))
     {
        temp=temp->next;
     }
     //now assume temp is pointing to k-1 position
     new_node->next=temp->next;
     temp->next=new_node;
     new_node->prev=temp;
     new_node->next->prev=new_node;


 }
 void deleteatstart()
 {
    if(head==NULL)
    {
        return ;
    }
    node* temp=head;//node to be deleted
   head=head->next;
   if(head==NULL)
   {
    tail=NULL;
   }
   else
   {
    head->prev=NULL;
   }
   free(temp);


 }
 void deleteatend()
 {
    if(tail==NULL)
   {
    return;
   }
   node* temp=tail;
   tail=tail->prev;
   if(tail==NULL)
   {
    head=NULL;
   }
   else{
    tail->next=NULL;
   }
 }
 void deleteatposition(int k)
 {
     node* temp=head;
     int count=1;
     while(count<(k-1))
     {
        temp=temp->next;
     }
     //now temp is pointing to k-1 position
     temp->next=temp->next->next;
     temp->next->prev=temp;
 }
 void display()
 {
    node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"-->";
        temp=temp->next;
    }
    cout<<endl;
 }
};
int main()
{
   node* head=NULL;
    doublylinkedlist d1;
    d1.insertatstart(10);
    d1.insertatstart(20);
    d1.insertatend(30);
    d1.insertatposition(40,2);
    d1.deleteatstart();
    d1.deleteatend();
    d1.display();
}
